{"version":3,"sources":["components/Menu/Menu.module.css","components/Authentication/Form/Login.module.css","pages/albums/Albums.module.css","pages/tracks/Tracks.module.css","components/Header/Header.module.css","pages/App.module.css","components/Menu/Menu.tsx","domain/release/api/fetchReleases.ts","domain/release/reducer.ts","domain/release/actions.ts","domain/authentication/reducer.ts","domain/store/StoreProvider.tsx","utils/type/statusIs.ts","domain/release/utils.ts","pages/albums/Albums.tsx","domain/store/selectors/release.ts","pages/tracks/Tracks.tsx","components/Header/Header.tsx","components/Form/Input/Input.tsx","components/Authentication/Form/Login.tsx","domain/authentication/utils.ts","utils/browserApi/cookie.ts","domain/authentication/api/checkToken.ts","domain/authentication/api/auth.ts","domain/authentication/actions.ts","components/Authentication/Authentication.tsx","domain/store/selectors/authentication.ts","pages/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Menu","memo","aside","initial","left","animate","className","styles","root","menu","menuItem","menuLink","to","releaseMoks","title","genre","label","upc","tracks","format","releaseDate","artists","releasesLoaded","createAction","releasesLoading","releasesError","release","createReducer","on","status","_","error","releases","fetchReleaseAction","dispatch","Promise","resolve","setTimeout","then","catch","e","authSuccess","authLoading","authError","authNotAuth","authentication","token","store","createStore","combineReducers","StoreProvider","children","statusIs","t","o","isReleaseLoading","isReleaseLoaded","variants","visible","delay","opacity","x","transition","hidden","Albums","useDispatch","releaseStore","useSelector","useEffect","ul","map","index","li","custom","Tracks","Header","Input","Login","submit","loading","useState","login","password","state","handleSubmit","useCallback","preventDefault","div","duration","cn","header","headerText","loadingStart","body","onSubmit","inputs","buttons","disabled","type","isNotAuthentication","isEntering","isAuthenticating","isAuthenticatedError","saveCookie","name","value","ttl","path","domain","secure","document","cookie","encodeURIComponent","Date","toUTCString","checkToken","a","auth","res","checkTokenAction","decodeURIComponent","split","empty","authAction","payload","Authentication","App","main","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,SAAW,uBAAuB,SAAW,yB,mBCAnHD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,OAAS,sBAAsB,WAAa,0BAA0B,KAAO,oBAAoB,OAAS,sBAAsB,MAAQ,qBAAqB,QAAU,uBAAuB,aAAe,4BAA4B,aAAe,4BAA4B,QAAU,yB,mBCA3UD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,QAAU,0B,mBCAxDD,EAAOC,QAAU,CAAC,KAAO,uB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,uB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,oB,qLCMZC,EAAOC,gBAAK,WACrB,OACI,kBAAC,IAAOC,MAAR,CAAcC,QAAS,CAAEC,MAAO,KAAOC,QAAS,CAAED,KAAM,GAAME,UAAWC,IAAOC,MAC5E,6BACI,wBAAIF,UAAWC,IAAOE,MAClB,wBAAIH,UAAWC,IAAOG,UAClB,kBAAC,IAAD,CAAMJ,UAAWC,IAAOI,SAAUC,GAAG,KAArC,SAIJ,wBAAIN,UAAWC,IAAOG,UAClB,kBAAC,IAAD,CAAMJ,UAAWC,IAAOI,SAAUC,GAAG,WAArC,WAIJ,wBAAIN,UAAWC,IAAOG,UAClB,kBAAC,IAAD,CAAMJ,UAAWC,IAAOI,SAAUC,GAAG,WAArC,iB,wBCrBlBC,EAA4B,CAC9B,CACIC,MAAO,oBACPC,MAAO,MACPC,MAAO,kBACPC,IAAK,WACLC,OAAQ,GACRC,OAAQ,MACRC,YAAa,aACbC,QAAS,CAAC,SAAU,YAExB,CACIP,MAAO,oBACPC,MAAO,MACPC,MAAO,kBACPC,IAAK,WACLC,OAAQ,GACRC,OAAQ,MACRC,YAAa,aACbC,QAAS,CAAC,SAAU,YAExB,CACIP,MAAO,oBACPC,MAAO,MACPC,MAAO,kBACPC,IAAK,WACLC,OAAQ,GACRC,OAAQ,MACRC,YAAa,aACbC,QAAS,CAAC,SAAU,a,OC3BfC,EAAiBC,YAC1B,8BAESC,EAAkBD,YAAa,oBAC/BE,EAAgBF,YAAoB,kBAEpCG,EAAUC,aACnB,SAACC,GACGA,EAAGJ,GAAiB,iBAAO,CAAEK,OAAQ,cAErCD,EAAGH,GAAe,SAACK,EAAGC,GAAJ,MAAe,CAAEA,QAAOF,OAAQ,YAElDD,EAAGN,GAAgB,SAACQ,EAAGE,GAAJ,MAAkB,CAAEA,WAAUH,OAAQ,eAE7D,CAAEA,OAAQ,YCdDI,EAAqB,SAACC,GFgCxB,IAAIC,SAAsB,SAACC,GAC9BC,YAAW,kBAAMD,EAAQvB,KAAc,QE/BtCyB,MAAK,SAACN,GAAD,OAAcE,EAASZ,EAAeU,OAC3CO,OAAM,SAACC,GAAD,OAAON,EAAST,EAAce,Q,QCJhCC,EAAclB,YAAqB,0BACnCmB,EAAcnB,YAAa,0BAC3BoB,EAAYpB,YAAoB,wBAChCqB,EAAcrB,YAAa,oBAE3BsB,EAAiBlB,aAC1B,SAACC,GACGA,EAAGgB,GAAa,iBAAO,CAAEf,OAAQ,uBAEjCD,EAAGc,GAAa,iBAAO,CAAEb,OAAQ,qBAEjCD,EAAGe,GAAW,SAACb,EAAGC,GAAJ,MAAe,CAAEA,QAAOF,OAAQ,yBAE9CD,EAAGa,GAAa,SAACX,EAAGgB,GAAJ,MAAe,CAAEA,QAAOjB,OAAQ,sBAEpD,CAAEA,OAAQ,aCXRkB,EAAQC,YACVC,YAAgB,CAAEvB,UAASmB,oBAGlBK,EAA0B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtC,OAAO,kBAAC,IAAD,CAAUJ,MAAOA,GAAQI,ICZvBC,EAAW,SACpBC,GADoB,OAEnB,SAACC,GAAD,OAAkBA,EAAEzB,SAAWwB,ICKvBE,EAAmBH,EAC5B,WAESI,EAAkBJ,EAC3B,UCAEK,EAAW,CACbC,QAAS,eAACC,EAAD,uDAAS,EAAT,MAAgB,CACrBC,QAAS,EACTC,EAAG,EACHC,WAAY,CAAEH,MAAe,GAARA,KAEzBI,OAAQ,iBAAO,CACXH,QAAS,EACTC,GAAI,OAICG,EAAS,WAClB,IAAM9B,EAAW+B,cACXC,ECpBCC,aAAyC,qBAAGzC,WD0BnD,OAJA0C,qBAAU,WACNnC,EAAmBC,KACpB,IAECqB,EAAiBW,GACV,4CAGPV,EAAgBU,GAEZ,yBAAK5D,UAAWC,IAAOC,MACnB,kBAAC,IAAO6D,GAAR,CACIlE,QAAQ,SACRE,QAAQ,UACRoD,SAAUA,GAETS,EAAalC,SAASsC,KAAI,SAAC5C,EAAS6C,GAAV,OACvB,kBAAC,IAAOC,GAAR,CACIC,OAAQF,EAAQ,EAChBlE,QAAQ,UACRoD,SAAUA,EACVnD,UAAWC,IAAOmB,SAEjBA,EAAQZ,YAQ1B,uC,iBEtDE4D,EAAS,WAClB,OAAO,yBAAKpE,UAAWC,IAAOC,MAAvB,Y,iBCDEmE,EAAS,WAClB,OAAO,4BAAQrE,UAAWC,IAAOC,MAA1B,W,iCCDEoE,EAAQ,WAEjB,OAAO,iC,iBCaLnB,EAAW,CACbM,OAAQ,CAAEH,QAAS,GACnBF,QAAS,CAAEE,QAAS,IAGXiB,EAA8B,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAA8B,IAAtBC,eAAsB,WACxDC,mBAAS,CAAEC,MAAO,GAAIC,SAAU,KAAzCC,EADiE,oBAGlEC,EAAeC,uBACjB,SAAC7C,GACGA,EAAE8C,iBAEFR,EAAOK,KAEX,CAACA,IAGL,OACI,kBAAC,IAAOI,IAAR,CACIpF,QAAQ,SACRE,QAAQ,UACRoD,SAAUA,EACVK,WAAY,CAAE0B,SAAU,IACxBlF,UAAWC,IAAOC,MAElB,yBAAKF,UAAWmF,IAAGlF,IAAOmF,OAAQnF,IAAOoF,aAAzC,WACA,yBACIrF,UAAWmF,IAAGlF,IAAOwE,QAAR,eACRxE,IAAOqF,aAAeb,MAG/B,yBAAKzE,UAAWC,IAAOsF,MACnB,0BAAMC,SAAUV,GACZ,yBAAK9E,UAAWC,IAAOwF,QACnB,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEJ,yBAAKzF,UAAWC,IAAOyF,SACnB,4BAAQC,SAAUlB,EAASmB,KAAK,UAAhC,uCC/CXC,EAAsB/C,EAG7B,oBAEOgD,EAAahD,EACtB,YAGSiD,EAAmBjD,EAG1B,kBAMOkD,IAJkBlD,EAC3B,iBAGgCA,EAG9B,uB,qCCtBOmD,GAAa,SACtBC,EACAC,GAFsB,IAGtBC,EAHsB,uDATR,OAadC,EAJsB,uCAKtBC,EALsB,uCAMtBC,EANsB,8CAQrBC,SAASC,OACNP,EACA,IACAQ,mBAAmBP,IAClBC,EACK,aAAe,IAAIO,MAAM,IAAIA,KAAe,IAANP,GAAYQ,cAClD,KACLP,EAAO,UAAYA,EAAO,KAC1BC,EAAS,aAAeA,EAAS,KACjCC,EAAS,WAAa,KC1BlBM,GAAU,yCAAG,WAAOrE,GAAP,UAAAsE,EAAA,sEAETjF,QAAQC,QAAQU,GAFP,mFAAH,sDCAVuE,GAAI,yCAAG,wBAAAD,EAAA,+DAChBnC,MADgB,EAEhBC,SAFgB,kBAOT,IAAI/C,SAAQ,SAACmF,GAChBjF,YAAW,WACPiF,EAAI,gBACL,SAVS,2CAAH,sDCUJC,GAAgB,yCAAG,WAAOrF,GAAP,gBAAAkF,EAAA,yDHRLZ,EGMM,uBAGvB1D,EHRN0E,qBACM,KAAOV,SAASC,QAAQU,MAAM,KAAOjB,EAAO,KAAK,IAAM,IAAIiB,MACzD,KACF,KGOFC,aAAM5E,GAHkB,0CAMdqE,GAAWrE,GANG,OAQpBZ,EAASO,EAAYK,IARD,gDAUpBZ,EAASU,KAVW,gCAaxBV,EAASU,KAbe,kCHRN,IAAC4D,IGQK,oBAAH,sDAiBhBmB,GAAU,yCAAG,WACtBzF,EACA0F,GAFsB,gBAAAR,EAAA,sEAKlBlF,EAASQ,KALS,SAOE2E,GAAKO,GAPP,OAOZ9E,EAPY,OASlByD,GA5ByB,uBA4BKzD,GAE9BZ,EAASO,EAAYK,IAXH,gDAalBZ,EAASS,EAAU,EAAD,KAbA,yDAAH,wDCbVkF,GAA2B,SAAC,GAAkB,IAAhB1E,EAAe,EAAfA,SACjCjB,EAAW+B,cACXpB,ECXCsB,aAA4C,qBAAGtB,kBDatDuB,qBAAU,WACNmD,GAAiBrF,KAClB,IAEH,IAAM4C,EAASO,uBAAY,SAACF,GACxBwC,GAAWzF,EAAUiD,KACtB,IAEH,OAAIiB,EAAWvD,GACJ,KAGPsD,EAAoBtD,GACb,kBAAC,EAAD,CAAOiC,OAAQA,IAGtBuB,EAAiBxD,GACV,kBAAC,EAAD,CAAOkC,SAAO,EAACD,OAAQA,IAG9BwB,GAAqBzD,GACd,kBAAC,EAAD,CAAOiC,OAAQA,EAAQ/C,MAAOc,EAAed,QAGjD,oCAAGoB,I,oBE5BD2E,GAAM,WACf,OACI,kBAAC,EAAD,KACI,kBAAC,GAAD,KACI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAAC,IAAOC,KAAR,CACI5H,QAAS,CAAEyD,QAAS,GACpBvD,QAAS,CAAEuD,QAAS,GACpBtD,UAAWC,KAAOwH,MAElB,kBAAC/H,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO2G,KAAK,WACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,WACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,KAAZ,cCrBtBqB,GAAcC,QACa,cAA7BC,OAAOC,SAASC,UAEiB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DA4CZ,SAASC,GAAgBC,EAAeC,GACpCC,UAAUC,cACLC,SAASJ,GACTjG,MAAK,SAAAsG,GACFA,EAAaC,cAAgB,WACzB,IAAMC,EAAmBF,EAAaG,WAEd,MAApBD,IAGJA,EAAiBE,cAAgB,WACE,cAA3BF,EAAiB3D,QACbsD,UAAUC,cAAcO,YAIxBC,QAAQC,IACJ,iHAKAX,GAAUA,EAAOY,UACjBZ,EAAOY,SAASR,KAMpBM,QAAQC,IAAI,sCAGRX,GAAUA,EAAOa,WACjBb,EAAOa,UAAUT,WAOxCrG,OAAM,SAAAR,GACHmH,QAAQnH,MAAM,4CAA6CA,MCjGvEuH,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,GAAD,OAEJ1C,SAAS2C,eAAe,SDiBrB,SAAkBjB,GACrB,GAA6C,kBAAmBC,UAAW,CAIvE,GAFkB,IAAIiB,IAAIC,YAAwBzB,OAAOC,SAASyB,MAEpDC,SAAW3B,OAAOC,SAAS0B,OAIrC,OAGJ3B,OAAO4B,iBAAiB,QAAQ,WAC5B,IAAMvB,EAAK,UAAMoB,YAAN,sBAEP3B,KAiEhB,SAAiCO,EAAeC,GAE5CuB,MAAMxB,EAAO,CACTyB,QAAS,CAAE,iBAAkB,YAE5B1H,MAAK,SAAA2H,GAEF,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAGjB,MAApBF,EAASpI,QACO,MAAfqI,IAC0C,IAAvCA,EAAYE,QAAQ,cAGxB3B,UAAUC,cAAc2B,MAAM/H,MAAK,SAAAsG,GAC/BA,EAAa0B,aAAahI,MAAK,WAC3B4F,OAAOC,SAASoC,eAKxBjC,GAAgBC,EAAOC,MAG9BjG,OAAM,WACH2G,QAAQC,IACJ,oEA1FAqB,CAAwBjC,EAAOC,GAI/BC,UAAUC,cAAc2B,MAAM/H,MAAK,WAC/B4G,QAAQC,IACJ,iHAMRb,GAAgBC,EAAOC,OCxCvCE,K","file":"static/js/main.478d62cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Menu_root__2DIg_\",\"menu\":\"Menu_menu__1wQ3F\",\"menuItem\":\"Menu_menuItem__3or_u\",\"menuLink\":\"Menu_menuLink__fJtNT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Login_root__qHKuw\",\"header\":\"Login_header__-4Q1E\",\"headerText\":\"Login_headerText__3-u-z\",\"body\":\"Login_body__2n5kN\",\"inputs\":\"Login_inputs__1gSIx\",\"error\":\"Login_error__1j8Vb\",\"loading\":\"Login_loading__2cQny\",\"loadingStart\":\"Login_loadingStart__hO0ND\",\"authProgress\":\"Login_authProgress__J4mSo\",\"buttons\":\"Login_buttons__2v7sH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Albums_root__1hVER\",\"release\":\"Albums_release__1vz_M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Tracks_root__39DAU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Header_root__2R_Rn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__22QKT\"};","import React, { memo } from 'react';\nimport { motion } from 'framer-motion';\n\nimport { Link } from 'react-router-dom';\n\nimport styles from './Menu.module.css';\n\nexport const Menu = memo(() => {\n    return (\n        <motion.aside initial={{ left: -120 }} animate={{ left: 0 }}  className={styles.root}>\n            <nav>\n                <ul className={styles.menu}>\n                    <li className={styles.menuItem}>\n                        <Link className={styles.menuLink} to=\"/\">\n                            Home\n                        </Link>\n                    </li>\n                    <li className={styles.menuItem}>\n                        <Link className={styles.menuLink} to=\"/albums\">\n                            Albums\n                        </Link>\n                    </li>\n                    <li className={styles.menuItem}>\n                        <Link className={styles.menuLink} to=\"/tracks\">\n                            Tracks\n                        </Link>\n                    </li>\n                </ul>\n            </nav>\n        </motion.aside>\n    );\n});\n","import { ReleaseDto } from '../../../typings/dto';\n\nconst releaseMoks: ReleaseDto[] = [\n    {\n        title: 'muscle-car-daniel',\n        genre: 'Pop',\n        label: 'Bad Ass Records',\n        upc: 'some upc',\n        tracks: 23,\n        format: 'mp3',\n        releaseDate: '20-12-2020',\n        artists: ['Den MC', 'Paul MC'],\n    },\n    {\n        title: 'muscle-car-daniel',\n        genre: 'Pop',\n        label: 'Bad Ass Records',\n        upc: 'some upc',\n        tracks: 23,\n        format: 'mp3',\n        releaseDate: '20-12-2020',\n        artists: ['Den MC', 'Paul MC'],\n    },\n    {\n        title: 'muscle-car-daniel',\n        genre: 'Pop',\n        label: 'Bad Ass Records',\n        upc: 'some upc',\n        tracks: 23,\n        format: 'mp3',\n        releaseDate: '20-12-2020',\n        artists: ['Den MC', 'Paul MC'],\n    },\n];\n\nexport const fetchReleases = () => {\n    return new Promise<ReleaseDto[]>((resolve) => {\n        setTimeout(() => resolve(releaseMoks), 1000);\n    });\n};\n","import { createAction, createReducer } from 'redux-act';\nimport { ReleaseStoreType } from '../../typings/store';\nimport { ReleaseDto } from 'typings/dto';\n\nexport const releasesLoaded = createAction<ReleaseDto[]>(\n    'Releases Successful loaded'\n);\nexport const releasesLoading = createAction('Releases Loading');\nexport const releasesError = createAction<Error>('Releases Error');\n\nexport const release = createReducer<ReleaseStoreType>(\n    (on) => {\n        on(releasesLoading, () => ({ status: 'Loading' }));\n\n        on(releasesError, (_, error) => ({ error, status: 'Error' }));\n\n        on(releasesLoaded, (_, releases) => ({ releases, status: 'Loaded' }));\n    },\n    { status: 'Loading' }\n);\n","import { Dispatch, AnyAction } from 'redux';\nimport { fetchReleases } from './api/fetchReleases';\nimport { releasesLoaded, releasesError } from './reducer';\n\nexport const fetchReleaseAction = (dispatch: Dispatch<AnyAction>) => {\n    fetchReleases()\n        .then((releases) => dispatch(releasesLoaded(releases)))\n        .catch((e) => dispatch(releasesError(e)));\n};\n","import { createAction, createReducer } from 'redux-act';\nimport { AuthenticationStore } from '../../typings/store';\n\nexport const authSuccess = createAction<string>('Authentication Success');\nexport const authLoading = createAction('Authentication Loading');\nexport const authError = createAction<Error>('Authentication Error');\nexport const authNotAuth = createAction('NotAuthenticated');\n\nexport const authentication = createReducer<AuthenticationStore>(\n    (on) => {\n        on(authNotAuth, () => ({ status: 'NotAuthenticated' }));\n\n        on(authLoading, () => ({ status: 'Authenticating' }));\n\n        on(authError, (_, error) => ({ error, status: 'AuthenticatedError' }));\n\n        on(authSuccess, (_, token) => ({ token, status: 'Authenticated' }));\n    },\n    { status: 'Entering' }\n);\n","import React from 'react';\nimport { Provider } from 'react-redux'\nimport { createStore, combineReducers } from 'redux'\nimport { authentication } from '../authentication/reducer';\nimport { release } from '../release/reducer';\n\n\nconst store = createStore(\n    combineReducers({ release, authentication })\n)\n\nexport const StoreProvider: React.FC = ({ children }) => {\n    return <Provider store={store}>{children}</Provider>;\n}\n","export const statusIs = <O extends { status: O['status'] }, R extends O>(\n    t: R['status']\n) => (o: O): o is R => o.status === t;\n","import { statusIs } from '../../utils/type/statusIs';\nimport {\n    ReleaseStoreType,\n    ReleaseStoreLoading,\n    ReleaseStoreLoaded,\n} from '../../typings/store';\n\nexport const isReleaseLoading = statusIs<ReleaseStoreType, ReleaseStoreLoading>(\n    'Loading'\n);\nexport const isReleaseLoaded = statusIs<ReleaseStoreType, ReleaseStoreLoaded>(\n    'Loaded'\n);\n","import React, { useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { useDispatch } from 'react-redux';\n\nimport styles from './Albums.module.css';\n\nimport { fetchReleaseAction } from 'domain/release/actions';\nimport { useSelectRelease } from 'domain/store';\nimport { isReleaseLoading, isReleaseLoaded } from 'domain/release/utils';\nimport { map } from 'ramda';\n\nconst variants = {\n    visible: (delay = 0) => ({\n        opacity: 1,\n        x: 0,\n        transition: { delay: delay * 0.2 },\n    }),\n    hidden: () => ({\n        opacity: 0,\n        x: -100,\n    }),\n};\n\nexport const Albums = () => {\n    const dispatch = useDispatch();\n    const releaseStore = useSelectRelease();\n\n    useEffect(() => {\n        fetchReleaseAction(dispatch);\n    }, []);\n\n    if (isReleaseLoading(releaseStore)) {\n        return <div>Loading....</div>;\n    }\n\n    if (isReleaseLoaded(releaseStore)) {\n        return (\n            <div className={styles.root}>\n                <motion.ul\n                    initial=\"hidden\"\n                    animate=\"visible\"\n                    variants={variants}\n                >\n                    {releaseStore.releases.map((release, index) => (\n                        <motion.li\n                            custom={index + 1}\n                            animate=\"visible\"\n                            variants={variants}\n                            className={styles.release}\n                        >\n                            {release.title}\n                        </motion.li>\n                    ))}\n                </motion.ul>\n            </div>\n        );\n    }\n\n    return <div>errro</div>;\n};\n","import { useSelector } from 'react-redux';\nimport { ReleaseStoreType, StoreType } from '../../../typings/store';\n\n\nexport const useSelectRelease = () => {\n    return useSelector<StoreType, ReleaseStoreType>(({ release }) => release)\n}\n","import React from 'react';\n\nimport styles from './Tracks.module.css';\n\nexport const Tracks = () => {\n    return <div className={styles.root}> Tracks</div>;\n};\n","import React from 'react';\n\nimport styles from './Header.module.css';\n\nexport const Header = () => {\n    return <header className={styles.root}>Header</header>;\n};\n","import React from 'react';\n\n\n\nexport const Input = () => {\n\n    return <input />;\n};\n","import React, { useCallback, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport cn from 'classnames';\n\nimport { Input } from 'components/Form';\n\nimport styles from './Login.module.css';\n\ntype State = {\n    login: string;\n    password: string;\n};\n\ntype LoginProps = {\n    error?: Error;\n    loading?: boolean;\n    submit: (state: State) => void;\n};\n\nconst variants = {\n    hidden: { opacity: 0 },\n    visible: { opacity: 1 },\n};\n\nexport const Login: React.FC<LoginProps> = ({ submit, loading = false }) => {\n    const [state] = useState({ login: '', password: '' });\n\n    const handleSubmit = useCallback(\n        (e) => {\n            e.preventDefault();\n\n            submit(state);\n        },\n        [state]\n    );\n\n    return (\n        <motion.div\n            initial=\"hidden\"\n            animate=\"visible\"\n            variants={variants}\n            transition={{ duration: 0.6 }}\n            className={styles.root}\n        >\n            <div className={cn(styles.header, styles.headerText)}>Relezer</div>\n            <div\n                className={cn(styles.loading, {\n                    [styles.loadingStart]: loading,\n                })}\n            />\n            <div className={styles.body}>\n                <form onSubmit={handleSubmit}>\n                    <div className={styles.inputs}>\n                        <Input />\n                        <Input />\n                    </div>\n                    <div className={styles.buttons}>\n                        <button disabled={loading} type=\"submit\">\n                            Войти\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </motion.div>\n    );\n};\n","import {\n    EnteringType,\n    AuthenticatingType,\n    AuthenticationStore,\n    NotAuthenticationType,\n    AuthenticatingErrorType,\n    AuthenticatedType,\n} from 'typings/store';\nimport { statusIs } from 'utils/type/statusIs';\n\nexport const isNotAuthentication = statusIs<\n    AuthenticationStore,\n    NotAuthenticationType\n    >('NotAuthenticated');\n\nexport const isEntering = statusIs<AuthenticationStore, EnteringType>(\n    'Entering'\n);\n\nexport const isAuthenticating = statusIs<\n    AuthenticationStore,\n    AuthenticatingType\n    >('Authenticating');\n\nexport const isAuthenticated = statusIs<AuthenticationStore, AuthenticatedType>(\n    'Authenticated'\n);\n\nexport const isAuthenticatedError = statusIs<\n    AuthenticationStore,\n    AuthenticatingErrorType\n    >('AuthenticatedError');\n","const cookieTTL = 60 * 60 * 24 * 30; // 30 суток\n\nexport const readCookie = (name: string) =>\n    decodeURIComponent(\n        (('; ' + document.cookie).split('; ' + name + '=')[1] || '').split(\n            ';'\n        )[0]\n    );\n\nexport const saveCookie = (\n    name: string,\n    value: string | number | boolean,\n    ttl = cookieTTL,\n    path?: string,\n    domain?: string,\n    secure?: boolean\n) =>\n    (document.cookie =\n        name +\n        '=' +\n        encodeURIComponent(value) +\n        (ttl\n            ? '; expires=' + new Date(+new Date() + ttl * 1000).toUTCString()\n            : '') +\n        (path ? '; path=' + path : '') +\n        (domain ? '; domains=' + domain : '') +\n        (secure ? '; secure' : ''));\n","export const checkToken = async (token: string) => {\n    // TODO проверка токена на бэке\n    return await Promise.resolve(token);\n};\n","export const auth = async ({\n    login,\n    password,\n}: {\n    login: string;\n    password: string;\n}): Promise<string> => {\n    return new Promise((res) => {\n        setTimeout(() => {\n            res('fake token');\n        }, 1000);\n    });\n};\n","import { Dispatch } from 'react';\nimport { empty } from 'ramda';\n\nimport { readCookie, saveCookie } from 'utils/browserApi';\nimport { checkToken } from './api/checkToken';\nimport { authError, authLoading, authNotAuth, authSuccess } from './reducer';\nimport { auth } from './api/auth';\n\nexport const TOKEN_COOKIE_NAME = 'authentication_token';\n\nexport const checkTokenAction = async (dispatch: Dispatch<any>) => {\n    const token = readCookie(TOKEN_COOKIE_NAME);\n\n    if (empty(token)) {\n        try {\n            //TODO довести до ума\n            await checkToken(token);\n\n            dispatch(authSuccess(token));\n        } catch {\n            dispatch(authNotAuth());\n        }\n    } else {\n        dispatch(authNotAuth());\n    }\n};\n\nexport const authAction = async (\n    dispatch: Dispatch<any>,\n    payload: { login: string; password: string }\n) => {\n    try {\n        dispatch(authLoading());\n\n        const token = await auth(payload);\n\n        saveCookie(TOKEN_COOKIE_NAME, token);\n\n        dispatch(authSuccess(token));\n    } catch (error) {\n        dispatch(authError(error));\n    }\n};\n","import React, { useCallback, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Login } from './Form/Login';\n\nimport {\n    isAuthenticatedError,\n    isAuthenticating,\n    isEntering,\n    isNotAuthentication,\n} from 'domain/authentication/utils';\nimport { useSelectAuthentication } from 'domain/store/selectors/authentication';\nimport { authAction, checkTokenAction } from 'domain/authentication/actions';\n\nexport const Authentication: React.FC = ({ children }) => {\n    const dispatch = useDispatch();\n    const authentication = useSelectAuthentication();\n\n    useEffect(() => {\n        checkTokenAction(dispatch);\n    }, []);\n\n    const submit = useCallback((state) => {\n        authAction(dispatch, state);\n    }, []);\n\n    if (isEntering(authentication)) {\n        return null;\n    }\n\n    if (isNotAuthentication(authentication)) {\n        return <Login submit={submit} />;\n    }\n\n    if (isAuthenticating(authentication)) {\n        return <Login loading submit={submit} />;\n    }\n\n    if (isAuthenticatedError(authentication)) {\n        return <Login submit={submit} error={authentication.error} />;\n    }\n\n    return <>{children}</>;\n};\n","import { useSelector } from 'react-redux';\nimport { AuthenticationStore, StoreType } from '../../../typings/store';\n\n\nexport const useSelectAuthentication = () => {\n    return useSelector<StoreType, AuthenticationStore>(({ authentication }) => authentication)\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { motion } from 'framer-motion';\n\nimport { Menu } from 'components/Menu/Menu';\nimport { Albums } from 'pages/albums';\nimport { Tracks } from 'pages/tracks';\nimport { Header } from 'components/Header/Header';\n\nimport { StoreProvider } from 'domain/store';\nimport { Authentication } from 'components/Authentication/Authentication';\n\nimport styles from './App.module.css';\n\nexport const App = () => {\n    return (\n        <StoreProvider>\n            <Authentication>\n                <BrowserRouter>\n                    <Header />\n                    <motion.main\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        className={styles.main}\n                    >\n                        <Menu />\n                        <Switch>\n                            <Route path=\"/albums\">\n                                <Albums />\n                            </Route>\n                            <Route path=\"/tracks\">\n                                <Tracks />\n                            </Route>\n                            <Route path=\"/\">Home</Route>\n                        </Switch>\n                    </motion.main>\n                </BrowserRouter>\n            </Authentication>\n        </StoreProvider>\n    );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './pages/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}